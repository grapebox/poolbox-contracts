// NOTE: THIS IS THE LEGACY VERSION OF DEPLOY.

// This is a script for deploying your contracts. You can adapt it to deploy
// yours, or create new ones.

const path = require("path");
const fs = require('fs');

function example() {
    (async () => {
        const ethers = require('ethers');
        // Deploy the contract to Ethereum test network - Ropsten
        const provider = ethers.providers.getDefaultProvider('ropsten')

        // Use your wallet's private key to deploy the contract
        const privateKey = 'YOUT_PRIVATE_KEY'
        const wallet = new ethers.Wallet(privateKey, provider)

        // Read the contract artifact, which was generated by Remix
        const metadata = JSON.parse(fs.readFileSync('contract.json').toString())

        // Set gas limit and gas price, using the default Ropsten provider
        const price = ethers.utils.formatUnits(await provider.getGasPrice(), 'gwei')
        const options = {gasLimit: 100000, gasPrice: ethers.utils.parseUnits(price, 'gwei')}

        // Deploy the contract
        const factory = new ethers.ContractFactory(metadata.abi, metadata.data.bytecode.object, wallet)
        const contract = await factory.deploy(options)
        await contract.deployed()
        console.log(`Deployment successful! Contract Address: ${contract.address}`)
    })()
}

async function main() {
    const {ethers} = require('hardhat');

    // This is just a convenience check
    if (network.name === "hardhat") {
        console.warn(
            "You are trying to deploy a contract to the Hardhat Network, which" +
            "gets automatically created and destroyed every time. Use the Hardhat" +
            " option '--network localhost'"
        );
    }

    // ethers is available in the global scope
    const [deployer] = await ethers.getSigners();
    console.log(
        "Deploying the contracts with the account:",
        await deployer.getAddress()
    );

    console.log("Account balance:", (await deployer.getBalance()).toString());

    const Token = await ethers.getContractFactory("ExampleToken");
    const token = await Token.deploy(deployer.address);
    await token.deployed();

    console.log("Token address:", token.address);

    // We also save the contract's artifacts and address in the frontend directory
    saveFrontendFiles(token);
}

function saveFrontendFiles(token) {
    const fs = require("fs");
    const contractsDir = path.join(__dirname, "..", "frontend", "src", "contracts");

    if (!fs.existsSync(contractsDir)) {
        fs.mkdirSync(contractsDir);
    }

    fs.writeFileSync(
        path.join(contractsDir, "contract-address.json"),
        JSON.stringify({Token: token.address}, undefined, 2)
    );

    const TokenArtifact = artifacts.readArtifactSync("ExampleToken");

    fs.writeFileSync(
        path.join(contractsDir, "ExampleToken.json"),
        JSON.stringify(TokenArtifact, null, 2)
    );
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1);
    });
